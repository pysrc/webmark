{"version":3,"file":"static/js/20.56a715ce.chunk.js","mappings":"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","sources":["../node_modules/mermaid/dist/styles-c10674c1.js","../node_modules/dagre-d3-es/src/dagre-js/util.js","../node_modules/dagre-d3-es/src/dagre-js/label/add-html-label.js","../node_modules/mermaid/dist/flowDiagram-v2-96b9c2cf.js","../node_modules/khroma/dist/methods/channel.js"],"sourcesContent":["import * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { curveLinear, select, selectAll } from \"d3\";\nimport { k as getStylesFromArray, l as log, m as evaluate, c as getConfig, e as common, r as renderKatex, n as interpolateToCurve, u as utils, o as setupGraphViewbox } from \"./mermaid-b5860b54.js\";\nimport { r as render } from \"./index-3862675e.js\";\nimport { addHtmlLabel } from \"dagre-d3-es/src/dagre-js/label/add-html-label.js\";\nimport * as khroma from \"khroma\";\nconst conf = {};\nconst setConf = function(cnf) {\n  const keys = Object.keys(cnf);\n  for (const key of keys) {\n    conf[key] = cnf[key];\n  }\n};\nconst addVertices = async function(vert, g, svgId, root, doc, diagObj) {\n  const svg = root.select(`[id=\"${svgId}\"]`);\n  const keys = Object.keys(vert);\n  for (const id of keys) {\n    const vertex = vert[id];\n    let classStr = \"default\";\n    if (vertex.classes.length > 0) {\n      classStr = vertex.classes.join(\" \");\n    }\n    classStr = classStr + \" flowchart-label\";\n    const styles = getStylesFromArray(vertex.styles);\n    let vertexText = vertex.text !== void 0 ? vertex.text : vertex.id;\n    let vertexNode;\n    log.info(\"vertex\", vertex, vertex.labelType);\n    if (vertex.labelType === \"markdown\") {\n      log.info(\"vertex\", vertex, vertex.labelType);\n    } else {\n      if (evaluate(getConfig().flowchart.htmlLabels)) {\n        const node = {\n          label: vertexText\n        };\n        vertexNode = addHtmlLabel(svg, node).node();\n        vertexNode.parentNode.removeChild(vertexNode);\n      } else {\n        const svgLabel = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n        svgLabel.setAttribute(\"style\", styles.labelStyle.replace(\"color:\", \"fill:\"));\n        const rows = vertexText.split(common.lineBreakRegex);\n        for (const row of rows) {\n          const tspan = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\n          tspan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n          tspan.setAttribute(\"dy\", \"1em\");\n          tspan.setAttribute(\"x\", \"1\");\n          tspan.textContent = row;\n          svgLabel.appendChild(tspan);\n        }\n        vertexNode = svgLabel;\n      }\n    }\n    let radius = 0;\n    let _shape = \"\";\n    switch (vertex.type) {\n      case \"round\":\n        radius = 5;\n        _shape = \"rect\";\n        break;\n      case \"square\":\n        _shape = \"rect\";\n        break;\n      case \"diamond\":\n        _shape = \"question\";\n        break;\n      case \"hexagon\":\n        _shape = \"hexagon\";\n        break;\n      case \"odd\":\n        _shape = \"rect_left_inv_arrow\";\n        break;\n      case \"lean_right\":\n        _shape = \"lean_right\";\n        break;\n      case \"lean_left\":\n        _shape = \"lean_left\";\n        break;\n      case \"trapezoid\":\n        _shape = \"trapezoid\";\n        break;\n      case \"inv_trapezoid\":\n        _shape = \"inv_trapezoid\";\n        break;\n      case \"odd_right\":\n        _shape = \"rect_left_inv_arrow\";\n        break;\n      case \"circle\":\n        _shape = \"circle\";\n        break;\n      case \"ellipse\":\n        _shape = \"ellipse\";\n        break;\n      case \"stadium\":\n        _shape = \"stadium\";\n        break;\n      case \"subroutine\":\n        _shape = \"subroutine\";\n        break;\n      case \"cylinder\":\n        _shape = \"cylinder\";\n        break;\n      case \"group\":\n        _shape = \"rect\";\n        break;\n      case \"doublecircle\":\n        _shape = \"doublecircle\";\n        break;\n      default:\n        _shape = \"rect\";\n    }\n    const labelText = await renderKatex(vertexText, getConfig());\n    g.setNode(vertex.id, {\n      labelStyle: styles.labelStyle,\n      shape: _shape,\n      labelText,\n      labelType: vertex.labelType,\n      rx: radius,\n      ry: radius,\n      class: classStr,\n      style: styles.style,\n      id: vertex.id,\n      link: vertex.link,\n      linkTarget: vertex.linkTarget,\n      tooltip: diagObj.db.getTooltip(vertex.id) || \"\",\n      domId: diagObj.db.lookUpDomId(vertex.id),\n      haveCallback: vertex.haveCallback,\n      width: vertex.type === \"group\" ? 500 : void 0,\n      dir: vertex.dir,\n      type: vertex.type,\n      props: vertex.props,\n      padding: getConfig().flowchart.padding\n    });\n    log.info(\"setNode\", {\n      labelStyle: styles.labelStyle,\n      labelType: vertex.labelType,\n      shape: _shape,\n      labelText,\n      rx: radius,\n      ry: radius,\n      class: classStr,\n      style: styles.style,\n      id: vertex.id,\n      domId: diagObj.db.lookUpDomId(vertex.id),\n      width: vertex.type === \"group\" ? 500 : void 0,\n      type: vertex.type,\n      dir: vertex.dir,\n      props: vertex.props,\n      padding: getConfig().flowchart.padding\n    });\n  }\n};\nconst addEdges = async function(edges, g, diagObj) {\n  log.info(\"abc78 edges = \", edges);\n  let cnt = 0;\n  let linkIdCnt = {};\n  let defaultStyle;\n  let defaultLabelStyle;\n  if (edges.defaultStyle !== void 0) {\n    const defaultStyles = getStylesFromArray(edges.defaultStyle);\n    defaultStyle = defaultStyles.style;\n    defaultLabelStyle = defaultStyles.labelStyle;\n  }\n  for (const edge of edges) {\n    cnt++;\n    const linkIdBase = \"L-\" + edge.start + \"-\" + edge.end;\n    if (linkIdCnt[linkIdBase] === void 0) {\n      linkIdCnt[linkIdBase] = 0;\n      log.info(\"abc78 new entry\", linkIdBase, linkIdCnt[linkIdBase]);\n    } else {\n      linkIdCnt[linkIdBase]++;\n      log.info(\"abc78 new entry\", linkIdBase, linkIdCnt[linkIdBase]);\n    }\n    let linkId = linkIdBase + \"-\" + linkIdCnt[linkIdBase];\n    log.info(\"abc78 new link id to be used is\", linkIdBase, linkId, linkIdCnt[linkIdBase]);\n    const linkNameStart = \"LS-\" + edge.start;\n    const linkNameEnd = \"LE-\" + edge.end;\n    const edgeData = { style: \"\", labelStyle: \"\" };\n    edgeData.minlen = edge.length || 1;\n    if (edge.type === \"arrow_open\") {\n      edgeData.arrowhead = \"none\";\n    } else {\n      edgeData.arrowhead = \"normal\";\n    }\n    edgeData.arrowTypeStart = \"arrow_open\";\n    edgeData.arrowTypeEnd = \"arrow_open\";\n    switch (edge.type) {\n      case \"double_arrow_cross\":\n        edgeData.arrowTypeStart = \"arrow_cross\";\n      case \"arrow_cross\":\n        edgeData.arrowTypeEnd = \"arrow_cross\";\n        break;\n      case \"double_arrow_point\":\n        edgeData.arrowTypeStart = \"arrow_point\";\n      case \"arrow_point\":\n        edgeData.arrowTypeEnd = \"arrow_point\";\n        break;\n      case \"double_arrow_circle\":\n        edgeData.arrowTypeStart = \"arrow_circle\";\n      case \"arrow_circle\":\n        edgeData.arrowTypeEnd = \"arrow_circle\";\n        break;\n    }\n    let style = \"\";\n    let labelStyle = \"\";\n    switch (edge.stroke) {\n      case \"normal\":\n        style = \"fill:none;\";\n        if (defaultStyle !== void 0) {\n          style = defaultStyle;\n        }\n        if (defaultLabelStyle !== void 0) {\n          labelStyle = defaultLabelStyle;\n        }\n        edgeData.thickness = \"normal\";\n        edgeData.pattern = \"solid\";\n        break;\n      case \"dotted\":\n        edgeData.thickness = \"normal\";\n        edgeData.pattern = \"dotted\";\n        edgeData.style = \"fill:none;stroke-width:2px;stroke-dasharray:3;\";\n        break;\n      case \"thick\":\n        edgeData.thickness = \"thick\";\n        edgeData.pattern = \"solid\";\n        edgeData.style = \"stroke-width: 3.5px;fill:none;\";\n        break;\n      case \"invisible\":\n        edgeData.thickness = \"invisible\";\n        edgeData.pattern = \"solid\";\n        edgeData.style = \"stroke-width: 0;fill:none;\";\n        break;\n    }\n    if (edge.style !== void 0) {\n      const styles = getStylesFromArray(edge.style);\n      style = styles.style;\n      labelStyle = styles.labelStyle;\n    }\n    edgeData.style = edgeData.style += style;\n    edgeData.labelStyle = edgeData.labelStyle += labelStyle;\n    if (edge.interpolate !== void 0) {\n      edgeData.curve = interpolateToCurve(edge.interpolate, curveLinear);\n    } else if (edges.defaultInterpolate !== void 0) {\n      edgeData.curve = interpolateToCurve(edges.defaultInterpolate, curveLinear);\n    } else {\n      edgeData.curve = interpolateToCurve(conf.curve, curveLinear);\n    }\n    if (edge.text === void 0) {\n      if (edge.style !== void 0) {\n        edgeData.arrowheadStyle = \"fill: #333\";\n      }\n    } else {\n      edgeData.arrowheadStyle = \"fill: #333\";\n      edgeData.labelpos = \"c\";\n    }\n    edgeData.labelType = edge.labelType;\n    edgeData.label = await renderKatex(edge.text.replace(common.lineBreakRegex, \"\\n\"), getConfig());\n    if (edge.style === void 0) {\n      edgeData.style = edgeData.style || \"stroke: #333; stroke-width: 1.5px;fill:none;\";\n    }\n    edgeData.labelStyle = edgeData.labelStyle.replace(\"color:\", \"fill:\");\n    edgeData.id = linkId;\n    edgeData.classes = \"flowchart-link \" + linkNameStart + \" \" + linkNameEnd;\n    g.setEdge(edge.start, edge.end, edgeData, cnt);\n  }\n};\nconst getClasses = function(text, diagObj) {\n  return diagObj.db.getClasses();\n};\nconst draw = async function(text, id, _version, diagObj) {\n  log.info(\"Drawing flowchart\");\n  let dir = diagObj.db.getDirection();\n  if (dir === void 0) {\n    dir = \"TD\";\n  }\n  const { securityLevel, flowchart: conf2 } = getConfig();\n  const nodeSpacing = conf2.nodeSpacing || 50;\n  const rankSpacing = conf2.rankSpacing || 50;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true\n  }).setGraph({\n    rankdir: dir,\n    nodesep: nodeSpacing,\n    ranksep: rankSpacing,\n    marginx: 0,\n    marginy: 0\n  }).setDefaultEdgeLabel(function() {\n    return {};\n  });\n  let subG;\n  const subGraphs = diagObj.db.getSubGraphs();\n  log.info(\"Subgraphs - \", subGraphs);\n  for (let i2 = subGraphs.length - 1; i2 >= 0; i2--) {\n    subG = subGraphs[i2];\n    log.info(\"Subgraph - \", subG);\n    diagObj.db.addVertex(\n      subG.id,\n      { text: subG.title, type: subG.labelType },\n      \"group\",\n      void 0,\n      subG.classes,\n      subG.dir\n    );\n  }\n  const vert = diagObj.db.getVertices();\n  const edges = diagObj.db.getEdges();\n  log.info(\"Edges\", edges);\n  let i = 0;\n  for (i = subGraphs.length - 1; i >= 0; i--) {\n    subG = subGraphs[i];\n    selectAll(\"cluster\").append(\"text\");\n    for (let j = 0; j < subG.nodes.length; j++) {\n      log.info(\"Setting up subgraphs\", subG.nodes[j], subG.id);\n      g.setParent(subG.nodes[j], subG.id);\n    }\n  }\n  await addVertices(vert, g, id, root, doc, diagObj);\n  await addEdges(edges, g);\n  const svg = root.select(`[id=\"${id}\"]`);\n  const element = root.select(\"#\" + id + \" g\");\n  await render(element, g, [\"point\", \"circle\", \"cross\"], \"flowchart\", id);\n  utils.insertTitle(svg, \"flowchartTitleText\", conf2.titleTopMargin, diagObj.db.getDiagramTitle());\n  setupGraphViewbox(g, svg, conf2.diagramPadding, conf2.useMaxWidth);\n  diagObj.db.indexNodes(\"subGraph\" + i);\n  if (!conf2.htmlLabels) {\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n    for (const label of labels) {\n      const dim = label.getBBox();\n      const rect = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n      rect.setAttribute(\"rx\", 0);\n      rect.setAttribute(\"ry\", 0);\n      rect.setAttribute(\"width\", dim.width);\n      rect.setAttribute(\"height\", dim.height);\n      label.insertBefore(rect, label.firstChild);\n    }\n  }\n  const keys = Object.keys(vert);\n  keys.forEach(function(key) {\n    const vertex = vert[key];\n    if (vertex.link) {\n      const node = select(\"#\" + id + ' [id=\"' + key + '\"]');\n      if (node) {\n        const link = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"a\");\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"class\", vertex.classes.join(\" \"));\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"href\", vertex.link);\n        link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"rel\", \"noopener\");\n        if (securityLevel === \"sandbox\") {\n          link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"target\", \"_top\");\n        } else if (vertex.linkTarget) {\n          link.setAttributeNS(\"http://www.w3.org/2000/svg\", \"target\", vertex.linkTarget);\n        }\n        const linkNode = node.insert(function() {\n          return link;\n        }, \":first-child\");\n        const shape = node.select(\".label-container\");\n        if (shape) {\n          linkNode.append(function() {\n            return shape.node();\n          });\n        }\n        const label = node.select(\".label\");\n        if (label) {\n          linkNode.append(function() {\n            return label.node();\n          });\n        }\n      }\n    }\n  });\n};\nconst flowRendererV2 = {\n  setConf,\n  addVertices,\n  addEdges,\n  getClasses,\n  draw\n};\nconst fade = (color, opacity) => {\n  const channel = khroma.channel;\n  const r = channel(color, \"r\");\n  const g = channel(color, \"g\");\n  const b = channel(color, \"b\");\n  return khroma.rgba(r, g, b, opacity);\n};\nconst getStyles = (options) => `.label {\n    font-family: ${options.fontFamily};\n    color: ${options.nodeTextColor || options.textColor};\n  }\n  .cluster-label text {\n    fill: ${options.titleColor};\n  }\n  .cluster-label span,p {\n    color: ${options.titleColor};\n  }\n\n  .label text,span,p {\n    fill: ${options.nodeTextColor || options.textColor};\n    color: ${options.nodeTextColor || options.textColor};\n  }\n\n  .node rect,\n  .node circle,\n  .node ellipse,\n  .node polygon,\n  .node path {\n    fill: ${options.mainBkg};\n    stroke: ${options.nodeBorder};\n    stroke-width: 1px;\n  }\n  .flowchart-label text {\n    text-anchor: middle;\n  }\n  // .flowchart-label .text-outer-tspan {\n  //   text-anchor: middle;\n  // }\n  // .flowchart-label .text-inner-tspan {\n  //   text-anchor: start;\n  // }\n\n  .node .katex path {\n    fill: #000;\n    stroke: #000;\n    stroke-width: 1px;\n  }\n\n  .node .label {\n    text-align: center;\n  }\n  .node.clickable {\n    cursor: pointer;\n  }\n\n  .arrowheadPath {\n    fill: ${options.arrowheadColor};\n  }\n\n  .edgePath .path {\n    stroke: ${options.lineColor};\n    stroke-width: 2.0px;\n  }\n\n  .flowchart-link {\n    stroke: ${options.lineColor};\n    fill: none;\n  }\n\n  .edgeLabel {\n    background-color: ${options.edgeLabelBackground};\n    rect {\n      opacity: 0.5;\n      background-color: ${options.edgeLabelBackground};\n      fill: ${options.edgeLabelBackground};\n    }\n    text-align: center;\n  }\n\n  /* For html labels only */\n  .labelBkg {\n    background-color: ${fade(options.edgeLabelBackground, 0.5)};\n    // background-color: \n  }\n\n  .cluster rect {\n    fill: ${options.clusterBkg};\n    stroke: ${options.clusterBorder};\n    stroke-width: 1px;\n  }\n\n  .cluster text {\n    fill: ${options.titleColor};\n  }\n\n  .cluster span,p {\n    color: ${options.titleColor};\n  }\n  /* .cluster div {\n    color: ${options.titleColor};\n  } */\n\n  div.mermaidTooltip {\n    position: absolute;\n    text-align: center;\n    max-width: 200px;\n    padding: 2px;\n    font-family: ${options.fontFamily};\n    font-size: 12px;\n    background: ${options.tertiaryColor};\n    border: 1px solid ${options.border2};\n    border-radius: 2px;\n    pointer-events: none;\n    z-index: 100;\n  }\n\n  .flowchartTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ${options.textColor};\n  }\n`;\nconst flowStyles = getStyles;\nexport {\n  flowStyles as a,\n  flowRendererV2 as f\n};\n","import * as _ from 'lodash-es';\n\n// Public utility functions\nexport { isSubgraph, edgeToId, applyStyle, applyClass, applyTransition };\n\n/*\n * Returns true if the specified node in the graph is a subgraph node. A\n * subgraph node is one that contains other nodes.\n */\nfunction isSubgraph(g, v) {\n  return !!g.children(v).length;\n}\n\nfunction edgeToId(e) {\n  return escapeId(e.v) + ':' + escapeId(e.w) + ':' + escapeId(e.name);\n}\n\nvar ID_DELIM = /:/g;\nfunction escapeId(str) {\n  return str ? String(str).replace(ID_DELIM, '\\\\:') : '';\n}\n\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr('style', styleFn);\n  }\n}\n\nfunction applyClass(dom, classFn, otherClasses) {\n  if (classFn) {\n    dom.attr('class', classFn).attr('class', otherClasses + ' ' + dom.attr('class'));\n  }\n}\n\nfunction applyTransition(selection, g) {\n  var graph = g.graph();\n\n  if (_.isPlainObject(graph)) {\n    var transition = graph.transition;\n    if (_.isFunction(transition)) {\n      return transition(selection);\n    }\n  }\n\n  return selection;\n}\n","import * as util from '../util.js';\n\nexport { addHtmlLabel };\n\nfunction addHtmlLabel(root, node) {\n  var fo = root.append('foreignObject').attr('width', '100000');\n\n  var div = fo.append('xhtml:div');\n  div.attr('xmlns', 'http://www.w3.org/1999/xhtml');\n\n  var label = node.label;\n  switch (typeof label) {\n    case 'function':\n      div.insert(label);\n      break;\n    case 'object':\n      // Currently we assume this is a DOM object.\n      div.insert(function () {\n        return label;\n      });\n      break;\n    default:\n      div.html(label);\n  }\n\n  util.applyStyle(div, node.labelStyle);\n  div.style('display', 'inline-block');\n  // Fix for firefox\n  div.style('white-space', 'nowrap');\n\n  var client = div.node().getBoundingClientRect();\n  fo.attr('width', client.width).attr('height', client.height);\n\n  return fo;\n}\n","import { p as parser, f as flowDb } from \"./flowDb-956e92f1.js\";\nimport { f as flowRendererV2, a as flowStyles } from \"./styles-c10674c1.js\";\nimport { p as setConfig } from \"./mermaid-b5860b54.js\";\nimport \"d3\";\nimport \"dagre-d3-es/src/graphlib/index.js\";\nimport \"./index-3862675e.js\";\nimport \"dagre-d3-es/src/dagre/index.js\";\nimport \"dagre-d3-es/src/graphlib/json.js\";\nimport \"./edges-e0da2a9e.js\";\nimport \"./createText-2e5e7dd3.js\";\nimport \"mdast-util-from-markdown\";\nimport \"ts-dedent\";\nimport \"dagre-d3-es/src/dagre-js/label/add-html-label.js\";\nimport \"khroma\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nconst diagram = {\n  parser,\n  db: flowDb,\n  renderer: flowRendererV2,\n  styles: flowStyles,\n  init: (cnf) => {\n    if (!cnf.flowchart) {\n      cnf.flowchart = {};\n    }\n    cnf.flowchart.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    setConfig({ flowchart: { arrowMarkerAbsolute: cnf.arrowMarkerAbsolute } });\n    flowRendererV2.setConf(cnf.flowchart);\n    flowDb.clear();\n    flowDb.setGen(\"gen-2\");\n  }\n};\nexport {\n  diagram\n};\n","/* IMPORT */\nimport _ from '../utils/index.js';\nimport Color from '../color/index.js';\n/* MAIN */\nconst channel = (color, channel) => {\n    return _.lang.round(Color.parse(color)[channel]);\n};\n/* EXPORT */\nexport default channel;\n"],"names":["conf","addVertices","async","vert","g","svgId","root","doc","diagObj","svg","select","keys","Object","id","vertex","classStr","classes","length","join","styles","getStylesFromArray","vertexNode","vertexText","text","log","info","labelType","evaluate","getConfig","flowchart","htmlLabels","node","label","addHtmlLabel","parentNode","removeChild","svgLabel","createElementNS","setAttribute","labelStyle","replace","rows","split","common","lineBreakRegex","row","tspan","setAttributeNS","textContent","appendChild","radius","_shape","type","labelText","renderKatex","setNode","shape","rx","ry","class","style","link","linkTarget","tooltip","db","getTooltip","domId","lookUpDomId","haveCallback","width","dir","props","padding","addEdges","edges","defaultStyle","defaultLabelStyle","cnt","linkIdCnt","defaultStyles","edge","linkIdBase","start","end","linkId","linkNameStart","linkNameEnd","edgeData","minlen","arrowhead","arrowTypeStart","arrowTypeEnd","stroke","thickness","pattern","interpolate","curve","interpolateToCurve","curveLinear","defaultInterpolate","arrowheadStyle","labelpos","setEdge","flowRendererV2","setConf","cnf","key","getClasses","draw","_version","getDirection","securityLevel","conf2","nodeSpacing","rankSpacing","sandboxElement","nodes","contentDocument","body","document","graphlib","multigraph","compound","setGraph","rankdir","nodesep","ranksep","marginx","marginy","setDefaultEdgeLabel","subG","subGraphs","getSubGraphs","i2","addVertex","title","getVertices","getEdges","i","selectAll","append","j","setParent","element","render","utils","insertTitle","titleTopMargin","getDiagramTitle","setupGraphViewbox","diagramPadding","useMaxWidth","indexNodes","labels","querySelectorAll","dim","getBBox","rect","height","insertBefore","firstChild","forEach","linkNode","insert","flowStyles","options","fontFamily","nodeTextColor","textColor","titleColor","mainBkg","nodeBorder","arrowheadColor","lineColor","edgeLabelBackground","fade","color","opacity","channel","khroma","r","b","clusterBkg","clusterBorder","tertiaryColor","border2","isSubgraph","v","children","edgeToId","e","escapeId","w","name","ID_DELIM","str","String","applyStyle","dom","styleFn","attr","applyClass","classFn","otherClasses","applyTransition","selection","graph","_","transition","fo","div","html","util","client","getBoundingClientRect","diagram","parser","flowDb","renderer","init","arrowMarkerAbsolute","setConfig","clear","setGen","lang","round","Color","parse"],"sourceRoot":""}